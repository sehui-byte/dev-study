###### 이번달의 주제는 DB 툴인 DBeaver 과 쿼리문 입니다.



###### 목차는 다음과 같습니다.

###### 1.DBeaver란?

###### 2.DBeaver 의 사용이점

###### 3.DBeaver의 장점

###### 4.DBeaver의 단점

###### 5.DBeaver의 연결 방법



* 1)DBeaver란? 

  * DBeaver는 무료로 제공되는 데이터베이스 관리 툴입니다. 기존 교육기간에 배우던 일반적인 방법으로 디비를 설치하기 위해선 해당 디비의 오픈소스가 제공되는 사이트로 들어가서 (예 : oracle 사이트) 다운로드 받고 오라클 developer 로 오라클 사용하는 형식으로 사용해왔는데 반해

    상기의 DBeaver 라는 툴을 사용하게 되면 클릭 몇번으로 다양한 형태의 DB 들을 연결하여 사용할 수 있게 제공이 되고 있습니다.



* 2)DBeaver의 사용이점

  * 상기의 툴은 여러 형태의 데이터베이스를 지원해주는 무료오픈 소스라고 소개를 하였습니다. 흔히들 접하는 RDBMS 부터 NoSql, Sqlite 등이 포함되므로 각각의 디비를 다뤄볼 수 있는 기회를 가질수 있어 디비 숙련에 큰 도움이 될 것이라고 생각합니다. 이를 통해 각각의 디비의 특성과 데이터 및 쿼리를 다루는 스킬의 향상에 큰 발전이 있을거라고 생각됩니다.


  * DBeaver 다운로드 링크
    * https://dbeaver.io/download/ -- 홈페이지 내 다운로드 경로
    * https://dbeaver.io/  -- 공식 홈페이지

  

* 3)DBeaver의 장점

  - 무료로 제공되는 오픈소스이다. 해당 관련 버전이나 API 자료도 상기의 홈페이지를 통해 확인할 수 있다.

  - RDBMS 외에 Lite noSQL, Lite 등의 다양한 지원을 해준다.

  - 툴의 인터페이스 구성도를 알기 쉽게 보여주며, ERD 설계 흐름도를 제공해준다.(테이블 생성시)

  - RDBMS 같은 경우 JDBC API를 이용하여 Connection 시켜준다. 해당 디비에 맞는 드라이버가 없을 경우 다운로드 하라고 안내해준다.

    

* 4)DBeaver의 단점

  * 무거운 쿼리를 실행시키면 다운되는 경우가 있다. 쿼리 실행 시간이 오래걸려도 가동하려는 특성 때문이고, 쿼리를 실행하면 상태바 n.n sec 형태로 나온다.

  * 여러 형태의 데이터베이스를 지원하기 때문에 2개 이상의 다른 디비를 이용할시 버전 정보를 잘 확인해야할 필요가 있다.(소개하는 필자도 postgre 와 oracle 두가지 밖에 성공 못했다.)

  * 위의 내용에 덧붙여 스프링  부트를 사용하는 경우 드라이버 버전과 mismatch 가 일어나는 경우가 종종 있으므로 주의가 필요하다.

    * 해당 내용의 추가가 필요하다고 판단되면 다음주에 덧붙여 올리겠습니다.

    

* 5)DBeaver 의 데이터베이스 연결 방법

  - DBeaver 를 설치하고 나서 실행을 시키면 다음과 같은 화면이 뜹니다.

    ![](https://user-images.githubusercontent.com/77149239/118398079-09278f00-b692-11eb-918f-80c141b4acba.png)

  - 데이터베이스(D) 를 누르고 새 데이터베이스 연결을 클릭합니다.

    ![](https://user-images.githubusercontent.com/77149239/118398094-15135100-b692-11eb-9aed-fb581a2d76c7.png)

  - 위에서 자신이 사용하고 싶은 툴을 찾아 클릭하고 다음을 누르면 연결 설정 화면이 나옵니다. 좌측에 자신이 사용하고픈 툴 별로 종류를 나누어주니 참고하시면 될것 같습니다. Popular 은 가장 자주 쓰이는 툴의 집합 같습니다.

  - 연결 설정 화면입니다.

    ![](https://user-images.githubusercontent.com/77149239/118398098-16447e00-b692-11eb-850a-b00377c9670e.png)

  - 위와 같이 데이터베이스 이름을 설정하고, 생성했던 유저와 패스워드를 입력해주면 됩니다.

    * 여기서 한가지 유용한 팁이 있습니다. 각자의 디비 툴 자체를 설치하여 생성한 것을 연결시키기도 하지만, 그렇게 되면 용량이 과하게 커지므로 AWS RDS 에서 데이터베이스를 생성하고 이것을 연결하는 방법도 있습니다. 자세한 사항이 필요하시면 다음주에 덧붙여 올리겠습니다.

      

  - Finish 전에 먼저 우측하단의 Test 연결을 먼저 시도한 뒤에 놓친 사항이 있는지 체크하고 연결하는게 좋습니다.(여기서 드라이버.jar 같이 빠진 사항을 알려줍니다.)

    
